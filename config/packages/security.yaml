security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    encoders:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        api_login:
            entity:
                class: App\Entity\User
                property: gaeaUserId

    firewalls:
        main:
            provider: api_login
            guard:
                authenticators:
                    - App\Security\IdAuthentificator
            entry_point: App\Security\IdAuthentificator

            logout:
                path: app_logout
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_WEB_MASTER: ROLE_USER
        ROLE_RH: ROLE_USER
        ROLE_ADMIN: [ROLE_WEB_MASTER, ROLE_RH]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/redirectLogin, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
      #  - { path: ^/article/admin, roles: ROLE_ADMIN }
        - { path: ^/rh, roles: ROLE_RH }
        # - { path: ^/profile, roles: ROLE_USER }
